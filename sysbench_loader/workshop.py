# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_workshop.ipynb.

# %% auto 0
__all__ = ['wiener_hammerstein', 'silverbox', 'cascaded_tanks', 'emps']

# %% ../nbs/01_workshop.ipynb 2
from .core import *
import nonlinear_benchmarks
from pathlib import Path

# %% ../nbs/01_workshop.ipynb 5
def wiener_hammerstein(
        save_path: Path #directory the files are written to, created if it does not exist
):
    train_val, test = nonlinear_benchmarks.WienerHammerBenchMark()
    split_idx = 80_000
    train = train_val[:split_idx]
    valid = train_val[split_idx:]

    dataset_to_hdf5(train,valid,test,save_path / 'wh')

# %% ../nbs/01_workshop.ipynb 8
def silverbox(
        save_path: Path #directory the files are written to, created if it does not exist
):
    train_val, test = nonlinear_benchmarks.Silverbox()
    split_idx = 78_000
    train = train_val[:split_idx]
    valid = train_val[split_idx:]

    dataset_to_hdf5(train,valid,test,save_path / 'silverbox')

# %% ../nbs/01_workshop.ipynb 11
def cascaded_tanks(
        save_path: Path #directory the files are written to, created if it does not exist
):
    'the cascaded_tanks dataset, '
    train_val, test = nonlinear_benchmarks.Cascaded_Tanks()
    train = train_val
    valid = train_val

    dataset_to_hdf5(train,valid,test,save_path / 'cascaded_tanks')

# %% ../nbs/01_workshop.ipynb 14
def emps(
        save_path: Path #directory the files are written to, created if it does not exist
):
    'the emps dataset, '
    train_val, test = nonlinear_benchmarks.EMPS()
    split_idx = 18_000
    train = train_val[:split_idx]
    valid = train_val[split_idx:]

    dataset_to_hdf5(train,valid,test,save_path / 'emps')
